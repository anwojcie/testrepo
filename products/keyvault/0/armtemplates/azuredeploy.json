{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.2",
    "parameters": {
        "KeyVaultName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Key Vault, must be Azure unique since it will be used for creating a dns."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The supported Azure location where the key vault should be created."
            }
        },
        "sku": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "Premium"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "SKU details - https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#Sku"
            }
        },
        "accessPolicies": {
            "type": "array",
            "defaultValue" : [],
            "metadata": {
                "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID."
            }
        },
        "tenant": {
            "type": "string",
            "defaultValue": "[subscription().tenantId]"
        },
        "enabledForDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            }
        },
        "enableRbacAuthorization": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Property that controls how data actions are authorized. - https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#VaultProperties"
            }
        },
        "enableSoftDelete": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault."
            }
        },
        "softDeleteRetentionInDays": {
            "type": "int",
            "maxValue": 90,
            "minValue": 7,
            "defaultValue": 90,
            "metadata": {
                "description": "Soft delete data retention in days. It accepts more than 7 and less than 90."
            }
        },
        "networkAcls": {
            "type": "object",
            "defaultValue": {
                "defaultAction": "allow",
                "bypass": "AzureServices"
            },
            "metadata": {
                "description": "Rules governing the accessibility of the key vault from specific network locations. https://docs.microsoft.com/en-us/azure/templates/microsoft.keyvault/vaults#NetworkRuleSet"
            }
        },
        "resourceTags": {
            "type": "object",
            "metadata": {
                "description": "Tags of the Azure Key Vault resource."
            }
        },
        "secretName": {
            "type": "string"
        },
        "secretValue": {
            "type": "securestring"
        }
    },
    "variables": {},
    "resources": [
        {
            "apiVersion": "2019-09-01",
            "name": "[parameters('KeyVaultName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "accessPolicies": "[parameters('accessPolicies')]",
                "tenantId": "[parameters('tenant')]",
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "softDeleteRetentionInDays": "[parameters('softDeleteRetentionInDays')]",
                "networkAcls": "[parameters('networkAcls')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2019-09-01",
            "condition": "[not(empty(parameters('secretName')))]",
            "name": "[concat(parameters('keyVaultName'), '/',parameters('secretName'))]",
            "properties": {
                "value": "[parameters('secretValue')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults/', parameters('keyVaultName'))]"
            ]
        }
    ],
    "outputs": {
        "vaultsResourceId": {
            "type": "string",
            "value": "[resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))]"
        },
        "vaultsName": {
            "type": "string",
            "value": "[parameters('KeyVaultName')]"
        },
        "keyVaultUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', parameters('KeyVaultName'))).vaultUri]"
        },
        "secretName": {
            "type": "string",
            "value": "[parameters('secretName')]"
        },
        "secretValue": {
            "type": "securestring",
            "value": "[parameters('secretValue')]"
        },
        "secretValuestring": {
            "type": "string",
            "value": "[parameters('secretValue')]"
        },
        "secretobj": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults/secrets', parameters('KeyVaultName'), parameters('secretName')))]"
        }
    }
}